#union of array using set TC:(n1 logn)+(n2 log n)+O(n1+n2)
arr1 = list(map(int, input().split()))
arr2 = list(map(int, input().split()))

# Convert arrays to sets to remove duplicates and find the intersection
set1 = set(arr1)
set2 = set(arr2)

# Find the intersection of two sets
intersection = set1.union(set2)

# Convert the result back to a list if needed
intersection = list(intersection)

print(intersection)

#optimal approach Tc:O(n1+n2)
class Solution:
    
    #Function to return a list containing the union of the two arrays.
    def findUnion(self,arr1,arr2,n,m):
        '''
        :param a: given sorted array a
        :param n: size of sorted array a
        :param b: given sorted array b
        :param m: size of sorted array b
        :return:  The union of both arrays as a list
        '''
        # code here 
        i=0
        j=0
        union_set = set() #o(1) for membership checks but list takes o(n) time for membership checks
        union_list = []
        
        while i < n and j < m:
            if arr1[i] < arr2[j]:
                if arr1[i] not in union_set:
                    union_list.append(arr1[i])
                    union_set.add(arr1[i])
                i += 1
            elif arr1[i] > arr2[j]:
                if arr2[j] not in union_set:
                    union_list.append(arr2[j])
                    union_set.add(arr2[j])
                j += 1
            else:
                if arr1[i] not in union_set:
                    union_list.append(arr1[i])
                    union_set.add(arr1[i])
                i += 1
                j += 1
        
        while i < n:
            if arr1[i] not in union_set:
                union_list.append(arr1[i])
                union_set.add(arr1[i])
            i += 1
        
        while j < m:
            if arr2[j] not in union_set:
                union_list.append(arr2[j])
                union_set.add(arr2[j])
            j += 1
        
        return union_list

#anku didi's code
def union_sorted(arr1, arr2):
    n = len(arr1)
    m = len(arr2)
    res = []
    
    # Loop through the first array and add unique elements to the result
    for i in range(n-1):
        if arr1[i] != arr1[i+1]:
            res.append(arr1[i])
    
    # Add the last element of arr1 if it's not already in the result
    if arr1[n-1] not in res:
        res.append(arr1[n-1])
    
    # Add elements from the second array if they're not already in the result
    for i in range(m):
        if arr2[i] not in res:
            res.append(arr2[i])
    
    # Sort the result list to ensure it's in ascending order
    res = sorted(res)
    
    return res

# Example usage
arr1 = list(map(int, input().split()))
arr2 = list(map(int, input().split()))
result = union_sorted(arr1, arr2)
print(result)

